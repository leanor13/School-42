Tests:

Failing:
1. valgrind --leak-check=full --leak-check=full --show-leak-kinds=all ./pipex "here_doc" aaa "c" "ca" cat out (8 bytes accessible)
2 ./pipex /dev/random "ls" "/bin/ls" outfile
3.  ./pipex infile cat wc outfile (if no infile, shouldn't create outfile)
4. ls | /ls > outfile - outfile should be cleared


All tests:
1. valgrind --track-fds=yes ./pipex "Makefile" "" "cat" /dev/stdout // empty command
2. valgrind --track-fds=yes env -i ./pipex "Makefile" "ls" "cat" /dev/stdout // env is null
3. valgrind --track-fds=yes env -i ./pipex "Makefile" "ls" "cat" /dev/stdout // env is null
4. ./pipex /dev/random "ls" "$ls" outfile
5. ./pipex /dev/random "ls" "/bin/ls" outfile // WHEN THE COMMAND HAS A PATH INSIDE IT SHOULD WORK UNLESS ITS NOT A EXEC
6. valgrind --track-fds=yes ./pipex "/dev/random" "cat" "head" /dev/stdout // dev random is unlimited file must be cutted after 10 lines of the file.
7. ./pipex infile cat wc outfile (if no infile, shouldn't create outfile)

void ft_free(void *i)
{
	free(i);
	*i = NULL;
}
